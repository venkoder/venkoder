name: 🚀 Advanced Profile Update

on:
  create:
  delete:
  public:
  push:
    branches: [main, master]
  repository_dispatch:
    types: [force-update]
  workflow_dispatch:
    inputs:
      force_rebuild:
        description: 'Force complete rebuild'
        required: false
        default: 'false'
        type: boolean

jobs:
  detect-changes:
    name: 🔍 Detect Repository Changes
    runs-on: ubuntu-latest
    outputs:
      has-repos: ${{ steps.check.outputs.has-repos }}
      repo-count: ${{ steps.check.outputs.repo-count }}
      should-update: ${{ steps.check.outputs.should-update }}

    steps:
      - name: 🔄 Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Check Repository Status
        id: check
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PROFILE_TOKEN }}
          USERNAME: ${{ github.repository_owner }}
        run: |
          echo "🔍 Fetching public repositories for $USERNAME..."
          REPO_DATA=$(curl -s -H "Authorization: token $GITHUB_TOKEN" \
            "https://api.github.com/users/$USERNAME/repos?sort=updated&per_page=100")

          if echo "$REPO_DATA" | jq -e 'type == "array"' > /dev/null; then
            PUBLIC_REPOS=$(echo "$REPO_DATA" | jq '[.[] | select(.fork == false and .private == false and .name != "'"$USERNAME"'")]')
            REPO_COUNT=$(echo "$PUBLIC_REPOS" | jq 'length')

            echo "repo-count=$REPO_COUNT" >> $GITHUB_OUTPUT

            if [ "$REPO_COUNT" -gt 0 ]; then
              echo "has-repos=true" >> $GITHUB_OUTPUT
            else
              echo "has-repos=false" >> $GITHUB_OUTPUT
            fi

            echo "should-update=true" >> $GITHUB_OUTPUT
            echo "📊 Found $REPO_COUNT public repositories"
          else
            echo "❌ Failed to fetch valid repository list:"
            echo "$REPO_DATA"
            echo "repo-count=0" >> $GITHUB_OUTPUT
            echo "has-repos=false" >> $GITHUB_OUTPUT
            echo "should-update=false" >> $GITHUB_OUTPUT
            exit 1
          fi

  update-profile:
    name: 🎨 Update Profile Content
    runs-on: ubuntu-latest
    needs: detect-changes
    if: needs.detect-changes.outputs.should-update == 'true'

    steps:
      - name: 🔄 Checkout
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GH_PROFILE_TOKEN }}
          fetch-depth: 0

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests PyGithub python-dateutil

      - name: 📁 Create Directory Structure
        run: |
          mkdir -p config
          mkdir -p scripts

      - name: ⚙️ Create Configuration if Missing
        run: |
          if [ ! -f config/profile_config.json ]; then
            echo "📝 Creating default configuration..."
            cat << 'EOF' > config/profile_config.json
{
  "profile": {
    "name": "VENKODER",
    "title": "Full Stack Developer"
  },
  "projects": {
    "max_display": 3,
    "exclude_repos": ["dotfiles", "config"],
    "show_if_empty": false
  }
}
EOF
          fi

      - name: 🎨 Update Projects Section
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PROFILE_TOKEN }}
          USERNAME: ${{ github.repository_owner }}
          HAS_REPOS: ${{ needs.detect-changes.outputs.has-repos }}
          REPO_COUNT: ${{ needs.detect-changes.outputs.repo-count }}
        run: |
          python scripts/update_projects.py

      - name: 📊 Generate Statistics
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PROFILE_TOKEN }}
          USERNAME: ${{ github.repository_owner }}
        run: |
          python scripts/generate_stats.py

      - name: 💾 Commit Changes
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add -A

          if git diff --staged --quiet; then
            echo "📝 No changes to commit"
          else
            REPO_COUNT="${{ needs.detect-changes.outputs.repo-count }}"
            TIMESTAMP=$(date -u +"%Y-%m-%d %H:%M:%S UTC")

            git commit -m $'🤖 Auto-update profile README\n\n📊 Repository count: '"$REPO_COUNT"$'\n🕒 Updated: '"$TIMESTAMP"$'\n🚀 Event: ${{ github.event_name }}\n\n[skip ci]'
            git push
            echo "✅ Changes committed and pushed"
          fi

      - name: 🎉 Summary
        run: |
          echo "🚀 Profile update completed!"
          echo "📊 Repository count: ${{ needs.detect-changes.outputs.repo-count }}"
          echo "📁 Has repositories: ${{ needs.detect-changes.outputs.has-repos }}"
          echo "🕒 Timestamp: $(date -u)"
